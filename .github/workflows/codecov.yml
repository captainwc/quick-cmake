on: [pull_request, push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Environment
        shell: bash
        run: |
          sudo apt install -y \
            protobuf-compiler \
            libprotobuf-dev \
            libboost-all-dev \
            libgtest-dev \
            libbenchmark-dev \
            libfmt-dev \
            libspdlog-dev \
            libtbb-dev \
            lcov

      #   - name: Show Debug Info
      #     run: |
      #       gcov -v
      #       lcov --help
      #       lcov --version

      - name: Build Project
        run: |
          mkdir -p build
          cd build
          cmake .. -DBUILD_WITH_COVERAGE=ON
          cmake --build . -j20

      - name: Run Targets
        run: |
          cd build
          find bin -type f -executable | /usr/bin/grep -vE ".*(asio|opencv|benchmark).*" | xargs -P 10 -n 1 -I{} sh -c './"$0" || true' {} 2>/dev/null &>1

      - name: Gen Coverage
        run: |
          cd build
          lcov --capture --directory . --output-file coverage.info --ignore-errors mismatch
          lcov --remove coverage.info '/usr/*' --output-file coverage.info --ignore-errors mismatch
          lcov --list coverage.info --ignore-errors mismatch

      - name: Upload to Codecov
        # run: |
        #   cd build
        #   bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: build/coverage.info
